from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from dotenv import load_dotenv
import os
import random

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ .env
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –°–ø–∏—Å–æ–∫ –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–∏—Ö —Ñ—Ä–∞–∑
motivational_quotes = [
    "–¢–∏ –º–æ–∂–µ—à —É—Å–µ. –ü—Ä–æ—Å—Ç–æ –ø–æ—á–Ω–∏ üî•",
    "–°—å–æ–≥–æ–¥–Ω—ñ —ñ–¥–µ–∞–ª—å–Ω–∏–π –¥–µ–Ω—å, —â–æ–± —Å—Ç–∞—Ç–∏ –∫—Ä–∞—â–æ—é –≤–µ—Ä—Å—ñ—î—é —Å–µ–±–µ ‚ú®",
    "–†–æ–±–∏, —â–æ –º–æ–∂–µ—à –∑ —Ç–∏–º, —â–æ –º–∞—î—à, —Ç–∞–º, –¥–µ —Ç–∏ —î üí™",
    "–¢–≤—ñ–π —É—Å–ø—ñ—Ö –Ω–µ –∑–∞ –≥–æ—Ä–∞–º–∏ üèî –í—ñ–Ω —É–∂–µ –≤ –¥–æ—Ä–æ–∑—ñ ‚ú®",
    "–ù–µ –∑—É–ø–∏–Ω—è–π—Å—è üí• –®–ª—è—Ö —Ñ–æ—Ä–º—É—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å —Ä—É—Ö—É üö∂‚Äç‚ôÄÔ∏è",
    "–ù—ñ—Ö—Ç–æ –Ω–µ –∑—Ä–æ–±–∏—Ç—å —Ü–µ –∑–∞–º—ñ—Å—Ç—å —Ç–µ–±–µ ‚Äî –∞–ª–µ —Ç–∏ –º–æ–∂–µ—à üî•",
    "–ù–∞–≤—ñ—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–π –∫—Ä–æ–∫ ‚Äî —Ü–µ –≤–∂–µ —Ä—É—Ö –≤–ø–µ—Ä–µ–¥ ü¶∂",
    "–¢–∏ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–æ–ª–æ–¥–µ—Ü—å, —Ç–∏ –º–µ–≥–∞–º–æ–ª–æ–¥–µ—Ü—å! üåà",
    "–ù–µ —á–µ–∫–∞–π —ñ–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç—É ‚ú® –°—Ç–≤–æ—Ä–∏ –π–æ–≥–æ üî•",
    "–°—É–º–Ω—ñ–≤–∞—î—à—Å—è? –ó–≥–∞–¥–∞–π, —Å–∫—ñ–ª—å–∫–∏ –≤–∂–µ –ø—Ä–æ–π–¥–µ–Ω–æ üí™",
    "–î–æ–∑–≤–æ–ª—å —Å–æ–±—ñ –±—É—Ç–∏ –≥–æ—Ä–¥–æ—é –∑–∞ —Å–µ–±–µ üíñ",
    "–¢–∏ üíé ‚Äî –≥–æ–ª–æ–≤–Ω–∞ –≥–µ—Ä–æ—ó–Ω—è —Å–≤–æ—î—ó —ñ—Å—Ç–æ—Ä—ñ—ó üìñ",
    "–ñ–∏—Ç—Ç—è –Ω–µ —Ä–µ–ø–µ—Ç–∏—Ü—ñ—è. –ì—Ä–∞–π –ø–æ-–∫—Ä—É–ø–Ω–æ–º—É üé≠",
    "–í —Ç–æ–±—ñ –≤–∂–µ —î –≤—Å–µ, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ üíó",
    "–©–µ –æ–¥–Ω–∞ –¥—ñ—è üë£ ‚Äî —â–µ –æ–¥–∏–Ω –∫—Ä–æ–∫ –¥–æ –º—Ä—ñ—ó üåà"
]

# –°–ø–∏—Å–æ–∫ –∑–∞—Å–ø–æ–∫—ñ–π–ª–∏–≤–∏—Ö —Ñ—Ä–∞–∑
calming_quotes = [
    "–í—Å–µ –¥–æ–±—Ä–µ, —Ç–∏ —Å–ø—Ä–∞–≤–ª—è—î—à—Å—è üå∏",
    "–ó—Ä–æ–±–∏ –≥–ª–∏–±–æ–∫–∏–π –≤–¥–∏—Ö üßò‚Äç‚ôÄÔ∏è –í–∏–¥–∏—Ö ‚Äî —Ç–∏ –≤ –±–µ–∑–ø–µ—Ü—ñ üíó",
    "–ù–µ –ø–æ—Å–ø—ñ—à–∞–π. –£ —Ç–µ–±–µ —î —á–∞—Å üïä",
    "–¢–≤–æ—ó –µ–º–æ—Ü—ñ—ó ‚Äî —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ üíå",
    "–¢–∏ –º–∞—î—à –ø—Ä–∞–≤–æ –Ω–∞ –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫ üåô",
    "–£—Å–µ –º–∏–Ω–µ—Ç—å—Å—è, —Ç–∏ —Å–∏–ª—å–Ω–∞ üí™",
    "–°—å–æ–≥–æ–¥–Ω—ñ —Ç–∏ –≤–∂–µ –∑—Ä–æ–±–∏–ª–∞ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ üíû"
]

# –ö–æ–º–∞–Ω–¥–∞ /start –∑ –∫–Ω–æ–ø–∫–∞–º–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üí™ –ú–æ—Ç–∏–≤—É–π –º–µ–Ω–µ!", callback_data="motivate")],
        [InlineKeyboardButton("üßò –ó–∞—Å–ø–æ–∫–æ–π –º–µ–Ω–µ", callback_data="calm")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –ú–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω–∏–π –ë–æ—Ç ü§ñ‚ú®\n–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞—Ä—è–¥ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è!",
        reply_markup=reply_markup
    )

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "motivate":
        quote = random.choice(motivational_quotes)
    elif query.data == "calm":
        quote = random.choice(calming_quotes)
    else:
        quote = "–Ø —Ç–µ–±–µ –ø—ñ–¥—Ç—Ä–∏–º—É—é ‚ù§Ô∏è"

    await query.edit_message_text(quote)

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))
app.run_polling()
